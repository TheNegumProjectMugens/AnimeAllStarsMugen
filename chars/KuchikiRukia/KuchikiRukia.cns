; Kuchiki Rukia's constants and state file.
; There are comments scattered through this file, so you may like to
; take a look if would like to learn more about the cns.

[Data]
;Amount of life to start with
life = 1000
;attack power (more is stronger)
attack = 100
;defensive power (more is stronger)
defence = 100
;Percentage to increase defense everytime player is knocked down
fall.defence_up = 50
;Time which player lies down for, before getting up
liedown.time = 60
;Number of points for juggling
airjuggle = 15
;Default hit spark number for HitDefs
sparkno = 2
;Default guard spark number
guard.sparkno = 40
;1 to enable echo on KO
KO.echo = 0
;Volume offset (negative for softer)
volume = 0
;Variables with this index and above will not have their values
;reset to 0 between rounds or matches. There are 60 int variables,
;indexed from 0 to 59, and 40 float variables, indexed from 0 to 39.
;If omitted, then it defaults to 60 and 40 for integer and float
;variables repectively, meaning that none are persistent, i.e. all
;are reset. If you want your variables to persist between matches,
;you need to override state 5900 from common1.cns.
IntPersistIndex = 60
FloatPersistIndex = 40

[Size]
xscale = 1           ;Horizontal scaling factor.
yscale = 1           ;Vertical scaling factor.
ground.back = 15     ;Player width (back, ground)
ground.front = 16    ;Player width (front, ground)
air.back = 12        ;Player width (back, air)
air.front = 12       ;Player width (front, air)
height = 60          ;Height of player (for opponent to jump over)
attack.dist = 160    ;Default attack distance
proj.attack.dist = 90 ;Default attack distance for projectiles
proj.doscale = 0     ;Set to 1 to scale projectiles too
head.pos = -5, -90   ;Approximate position of head
mid.pos = -5, -60    ;Approximate position of midsection
shadowoffset = 0     ;Number of pixels to vertically offset the shadow
draw.offset = 0,0    ;Player drawing offset in pixels (x, y)

[Velocity]
walk.fwd  = 3.5      ;Walk forward
walk.back = -3.5     ;Walk backward
run.fwd  = 6, 0    ;Run forward (x, y)
run.back = -4.5,-3.8 ;Hop backward (x, y)
jump.neu = 0,-8.4    ;Neutral jumping velocity (x, y)
jump.back = -2.55    ;Jump back Speed (x, y)
jump.fwd = 2.5       ;Jump forward Speed (x, y)
runjump.back = -2.55,-8.1 ;Running jump speeds (opt)
runjump.fwd = 4,-8.1      ;.
airjump.neu = 0,-8.1      ;.
airjump.back = -2.55      ;Air jump speeds (opt)
airjump.fwd = 2.5         ;.

[Movement]
airjump.num = 1      ;Number of air jumps allowed (opt)
airjump.height = 35  ;Minimum distance from ground before you can air jump (opt)
yaccel = .44         ;Vertical acceleration
stand.friction = .85  ;Friction coefficient when standing
crouch.friction = .82 ;Friction coefficient when crouching

;---------------------------------------------------------------------------
; Variable usage:
; This is a record of the variables that KFM uses. Keeping a record of your
; variable usage helps you avoid careless mistakes later.
; var(1)  - Used in kfm.cmd for combo condition (updated every tick)
; var(2)  - Used in Kung Fu Throw (state 800) to remember if fwd was being
;           held (remembered from state 800 through state 810).


;---------------------------------------------------------------------------
; Lose by Time Over
; CNS difficulty: basic
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Win state decider
; CNS difficulty: basic
[Statedef 180]
type = S

[State 180, 1]
type = ChangeState
trigger1 = Time = 0
value = 181

;---------------------------------------------------------------------------
; Win pose 1 - Bow
; CNS difficulty: basic
[Statedef 181]
type = S
ctrl = 0
anim = 181
velset = 0,0

[State 181, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Introduction
; CNS difficulty: basic
[Statedef 191]
type = S
ctrl = 0
anim = 190
velset = 0,0

[State 191, 1] ;Freeze animation until PreIntro is over
type = ChangeAnim
trigger1 = RoundState = 0
value = 190

[State 191, 2] ;Assert this until you want "round 1, fight" to begin
type = AssertSpecial
trigger1 = 1
flag = Intro

[State 191, 3] ;Change to stand state when done
type = ChangeState
trigger1 = AnimTime = 0
value = 0


;---------------------------------------------------------------------------
; Taunt
; CNS difficulty: easy
[Statedef 195]
type = S
ctrl = 0
anim = 195
velset = 0,0
movetype = I
physics = S
sprpriority = 2
poweradd = 100

[State 195, 1]
type = CtrlSet
trigger1 = Time = 4
value = 1

[State 195, 2]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


;---------------------------------------------------------------------------
; Low Kick
[Statedef 200]
type    = S                      ;State-type: S-stand, C-crouch, A-air, L-liedown
movetype= A                      ;Move-type: A-attack, I-idle, H-gethit
physics = S                      ;Physics: S-stand, C-crouch, A-air
juggle  = 1                      ;Number of air juggle points move takes
;Commonly-used controllers:
velset = 0,0                     ;Set velocity (x,y) (Def: no change)
ctrl = 0                         ;Set ctrl (Def: no change)
anim = 200                       ;Change animation (Def: no change)
poweradd = 20                    ;Power to add (Def: 0)
sprpriority = 2                  ;Set p1's sprite layering priority to 2 (in front)

[State 200, 1]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA                     ;Attribute: Standing, Normal Attack
damage = 30, 15                   ;Damage that move inflicts, guard damage
animtype = Light                 ;Animation type: Light, Medium, Heavy, Back (def: Light)
guardflag = MA                   ;Flags on how move is to be guarded against
hitflag = MAF                    ;Flags of conditions that move can hit
priority = 3, Hit                ;Attack priority: 0 (least) to 7 (most), 4 default
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 6                 ;Time attacker pauses, time opponent shakes
sparkno = 0                      ;Spark anim no (Def: set above)
sparkxy = -10, -76               ;X-offset for the "hit spark" rel. to p2,
;Y-offset for the spark rel. to p1
hitsound = 5, 0                  ;Sound to play on hit
guardsound = 6, 0                ;Sound to play on guard
ground.type = High               ;Type: High, Low, Trip (def: Normal)
ground.slidetime = 5             ;Time that the opponent slides back
ground.hittime  = 10             ;Time opponent is in hit state
ground.velocity = -2             ;Velocity at which opponent is pushed
airguard.velocity = -1.9,-.8     ;Guard velocity in air (def: (air.xvel*1.5, air.yvel/2))
air.type = High                  ;Type: High, Low, Trip (def: same as ground.type)
air.velocity = -1.4,-3           ;X-velocity at which opponent is pushed,
;Y-velocity at which opponent is pushed
air.hittime = 12                 ;Time before opponent regains control in air

[State 200, 1]
type = PlaySnd
trigger1 = Time = 0
value = 0, 10

[State 200, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Energy Palm
[Statedef 210]
type    = S
movetype= A
physics = S
juggle  = 3
;Commonly-used controllers:
velset = 0,0
ctrl = 0
anim = 210
poweradd = -500
sprpriority = 2

[State 210, 1]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA
damage = 25, 12
animtype = Medium
guardflag = MA
hitflag = MAF
priority = 5, Hit
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 10, 12
sparkno = 0
sparkxy = -10, -76
;Y-offset for the spark rel. to p1
hitsound = 5, 0
guardsound = 6, 0
ground.type = High
ground.slidetime = 15
ground.hittime  = 20
ground.velocity = -4
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 20

[State 210, 1]
type = PlaySnd
trigger1 = Time = 0
value = 0, 0

[State 210, 2]
type = PlaySnd
trigger1 = Time = 10
value = 0, 1

[State 210, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Medium Kick
[Statedef 220]
type    = S
movetype= A
physics = S
juggle  = 1
;Commonly-used controllers:
velset = 0,0
ctrl = 0
anim = 220
poweradd = 40
sprpriority = 2

[State 220, 1]
type = PlaySnd
trigger1 = Time = 1
value = 0, 9

[State 220, 2]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA
damage = 55, 35
animtype = Medium
guardflag = MA
hitflag = MAF
priority = 4, Hit
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 10
sparkno = 0
sparkxy = -10, -76
;Y-offset for the spark rel. to p1
hitsound = 5, 0
guardsound = 6, 0
ground.type = High
ground.slidetime = 10
ground.hittime  = 15
ground.velocity = -3
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 16

[State 220, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Shinigami Glove Punch
[Statedef 230]
type    = S
movetype= A
physics = S
juggle  = 1
;Commonly-used controllers:
velset = 0,0
ctrl = 0
anim = 230
poweradd= 40
sprpriority = 2

[State 230, 1]
type = PlaySnd
trigger1 = Time = 0
value = 0, 7

[State 230, 2]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA
damage = 75, 55
animtype = Medium
guardflag = MA
hitflag = MAF
priority = 4, Hit
;Hit/Miss/Dodge type (Def: Hit)
pausetime = 8, 8
sparkno = 0
sparkxy = -10, -76
;Y-offset for the spark rel. to p1
hitsound = 5, 0
guardsound = 6, 0
ground.type = High
ground.slidetime = 5
ground.hittime  = 10
ground.velocity = -4
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 14

[State 230, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; High Kick
[Statedef 240]
type    = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 240
poweradd = 60
sprpriority = 2

[State 240, 1]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA
damage = 75, 55
animtype = Heavy
guardflag = MA
hitflag = MAF
priority = 5, Hit
pausetime = 8, 10
sparkno = 0
sparkxy = -10, -76
hitsound = 5, 0
guardsound = 6, 0
ground.type = High
ground.slidetime = 5
ground.hittime  = 10
ground.velocity = -4
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12

[State 240, 1]
type = PlaySnd
trigger1 = Time = 0
value = 0, 7

[State 240, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Punch
[Statedef 250]
type    = S
movetype= A
physics = S
juggle  = 1
velset = 0,0
ctrl = 0
anim = 250
poweradd = 20
sprpriority = 2

[State 250, 1]
type = HitDef
trigger1 = AnimElem = 3
attr = S, NA
damage = 30, 15
animtype = Light
guardflag = MA
hitflag = MAF
priority = 3, Hit
pausetime = 8, 6
sparkno = 0
sparkxy = -10, -76
hitsound = 5, 0
guardsound = 6, 0
ground.type = High
ground.slidetime = 5
ground.hittime  = 10
ground.velocity = -3
airguard.velocity = -1.9,-.8
air.type = High
air.velocity = -1.4,-3
air.hittime = 12

[State 250, 1]
type = PlaySnd
trigger1 = Time = 0
value = 0, 8

[State 250, 7]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;Byakurai Straight
[Statedef 600]
type    = C
movetype= A
physics = C
juggle  = 5
poweradd= -1000
ctrl = 0
anim = 600
sprpriority = 2

[State 600, 1]
type = PlaySnd
trigger1 = Time = 0
value = 0, 6

[State 600, 2]
type = PlaySnd
trigger1 = Time = 0
value = 0, 11

[State 600, 3]
type = HitDef
trigger1 = Animelem = 3
attr = C, NA
damage    = 100
animtype  = Heavy
hitflag = MAF
guardflag = MA
pausetime = 10,12
sparkno = 0
sparkxy = -10,-8
hitsound   = 5,0
guardsound = 6,0
ground.type = High
ground.slidetime = 8
ground.hittime  = 10
ground.velocity = -6
air.type = High
air.velocity = -2,-3
air.hittime = 12

[State 600, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;Byakurai Diagonal Down
[Statedef 620]
type    = A
movetype= A
physics = A
juggle  = 5
poweradd= -1000
ctrl = 0
anim = 620
sprpriority = 2

[State 620, 1]
type = PlaySnd
trigger1 = Time = 0
value = 0, 6

[State 620, 2]
type = PlaySnd
trigger1 = Time = 0
value = 0, 11

[State 620, 3]
type = HitDef
trigger1 = Animelem = 3
attr = A, NA
damage    = 100
animtype  = Heavy
hitflag = MAF
guardflag = MA
pausetime = 10,12
sparkno = 0
sparkxy = -10,-8
hitsound   = 5,0
guardsound = 6,0
ground.type = High
ground.slidetime = 8
ground.hittime  = 10
ground.velocity = -6
air.type = High
air.velocity = -2,-3
air.hittime = 12

[State 620, 4]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1

;---------------------------------------------------------------------------
;Spirits and Hollows Explaination
[Statedef 640]
type    = C
movetype= A
physics = C
juggle  = 4
poweradd= 100
ctrl = 0
anim = 640
sprpriority = 2

[State 640, 1]
type = PlaySnd
trigger1 = Time = 0
value = 0, 18

[State 640, 2]
type = HitDef
trigger1 = Animelem = 3
attr = C, NA
damage    = 75
animtype  = Heavy
hitflag = MAF
guardflag = MA
pausetime = 10, 180
sparkno = 0
sparkxy = -10,-8
hitsound   = 5,0
guardsound = 6,0
ground.type = High
ground.slidetime = 8
ground.hittime  = 10
ground.velocity = 0
air.type = High
air.velocity = -2,-3
air.hittime = 12

[State 640, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 0
ctrl = 1


;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
; Override common states (use same number to override) :
;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
; States that are always executed (use statedef -2)
;---------------------------------------------------------------------------

;---------------------------------------------------------------------------
; States that are executed when in self's state file (use statedef -3)
;---------------------------------------------------------------------------

[Statedef -3]

;This controller plays a sound everytime KFM lands from a jump, or
;from his back-dash.
[State -3, Landing Sound]
type = PlaySnd
triggerall = Time = 1
trigger1 = stateno = 52 ;Jump land
trigger2 = stateno = 106 ;Run-back land
value = 40, 0
